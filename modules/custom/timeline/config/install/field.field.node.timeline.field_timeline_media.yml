langcode: en
status: true
dependencies:
  config:
    - field.storage.node.field_timeline_media
    - media.type.font_icon
    - media.type.gallery
    - media.type.image
    - media.type.remote_video
    - media.type.video
    - node.type.timeline
  module:
    - dynamic_entity_reference
id: node.timeline.field_timeline_media
field_name: field_timeline_media
entity_type: node
bundle: timeline
label: Media
description: ''
required: false
translatable: false
default_value: {  }
default_value_callback: ''
settings:
  media:
    handler: 'default:media'
    handler_settings:
      target_bundles:
        font_icon: font_icon
        gallery: gallery
        image: image
        remote_video: remote_video
        video: video
      sort:
        field: _none
      auto_create: false
      auto_create_bundle: font_icon
  activity:
    handler: 'default:activity'
    handler_settings: {  }
  comment:
    handler: 'default:comment'
    handler_settings: {  }
  node:
    handler: 'default:node'
    handler_settings: {  }
  crop:
    handler: 'default:crop'
    handler_settings: {  }
  block_content:
    handler: 'default:block_content'
    handler_settings: {  }
  menu_link_content:
    handler: 'default:menu_link_content'
    handler_settings: {  }
  entity_subqueue:
    handler: 'default:entity_subqueue'
    handler_settings: {  }
  event_enrollment:
    handler: 'default:event_enrollment'
    handler_settings: {  }
  entity_embed_fake_entity:
    handler: 'default:entity_embed_fake_entity'
    handler_settings: {  }
  file:
    handler: 'default:file'
    handler_settings: {  }
  flagging:
    handler: 'default:flagging'
    handler_settings: {  }
  font:
    handler: 'default:font'
    handler_settings: {  }
  group:
    handler: 'default:group'
    handler_settings: {  }
  group_content:
    handler: 'default:group_content'
    handler_settings: {  }
  mentions:
    handler: 'default:mentions'
    handler_settings: {  }
  message:
    handler: 'default:message'
    handler_settings: {  }
  paragraph:
    handler: 'default:paragraph'
    handler_settings: {  }
  post:
    handler: 'default:post'
    handler_settings: {  }
  profile:
    handler: 'default:profile'
    handler_settings: {  }
  queue_storage_entity:
    handler: 'default:queue_storage_entity'
    handler_settings: {  }
  search_api_task:
    handler: 'default:search_api_task'
    handler_settings: {  }
  taxonomy_term:
    handler: 'default:taxonomy_term'
    handler_settings: {  }
  path_alias:
    handler: 'default:path_alias'
    handler_settings: {  }
  user:
    handler: 'default:user'
    handler_settings: {  }
  vote:
    handler: 'default:vote'
    handler_settings: {  }
  vote_result:
    handler: 'default:vote_result'
    handler_settings: {  }
field_type: dynamic_entity_reference
